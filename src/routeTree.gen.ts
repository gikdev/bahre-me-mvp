/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TrackieIndexRouteImport } from './routes/trackie/index'
import { Route as SleeepIndexRouteImport } from './routes/sleeep/index'
import { Route as FhoosedIndexRouteImport } from './routes/fhoosed/index'
import { Route as ExworkciseIndexRouteImport } from './routes/exworkcise/index'
import { Route as DaramadIndexRouteImport } from './routes/daramad/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TrackieIndexRoute = TrackieIndexRouteImport.update({
  id: '/trackie/',
  path: '/trackie/',
  getParentRoute: () => rootRouteImport,
} as any)
const SleeepIndexRoute = SleeepIndexRouteImport.update({
  id: '/sleeep/',
  path: '/sleeep/',
  getParentRoute: () => rootRouteImport,
} as any)
const FhoosedIndexRoute = FhoosedIndexRouteImport.update({
  id: '/fhoosed/',
  path: '/fhoosed/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExworkciseIndexRoute = ExworkciseIndexRouteImport.update({
  id: '/exworkcise/',
  path: '/exworkcise/',
  getParentRoute: () => rootRouteImport,
} as any)
const DaramadIndexRoute = DaramadIndexRouteImport.update({
  id: '/daramad/',
  path: '/daramad/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/daramad': typeof DaramadIndexRoute
  '/exworkcise': typeof ExworkciseIndexRoute
  '/fhoosed': typeof FhoosedIndexRoute
  '/sleeep': typeof SleeepIndexRoute
  '/trackie': typeof TrackieIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/daramad': typeof DaramadIndexRoute
  '/exworkcise': typeof ExworkciseIndexRoute
  '/fhoosed': typeof FhoosedIndexRoute
  '/sleeep': typeof SleeepIndexRoute
  '/trackie': typeof TrackieIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/daramad/': typeof DaramadIndexRoute
  '/exworkcise/': typeof ExworkciseIndexRoute
  '/fhoosed/': typeof FhoosedIndexRoute
  '/sleeep/': typeof SleeepIndexRoute
  '/trackie/': typeof TrackieIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/daramad'
    | '/exworkcise'
    | '/fhoosed'
    | '/sleeep'
    | '/trackie'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/daramad' | '/exworkcise' | '/fhoosed' | '/sleeep' | '/trackie'
  id:
    | '__root__'
    | '/'
    | '/daramad/'
    | '/exworkcise/'
    | '/fhoosed/'
    | '/sleeep/'
    | '/trackie/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DaramadIndexRoute: typeof DaramadIndexRoute
  ExworkciseIndexRoute: typeof ExworkciseIndexRoute
  FhoosedIndexRoute: typeof FhoosedIndexRoute
  SleeepIndexRoute: typeof SleeepIndexRoute
  TrackieIndexRoute: typeof TrackieIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/trackie/': {
      id: '/trackie/'
      path: '/trackie'
      fullPath: '/trackie'
      preLoaderRoute: typeof TrackieIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sleeep/': {
      id: '/sleeep/'
      path: '/sleeep'
      fullPath: '/sleeep'
      preLoaderRoute: typeof SleeepIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fhoosed/': {
      id: '/fhoosed/'
      path: '/fhoosed'
      fullPath: '/fhoosed'
      preLoaderRoute: typeof FhoosedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exworkcise/': {
      id: '/exworkcise/'
      path: '/exworkcise'
      fullPath: '/exworkcise'
      preLoaderRoute: typeof ExworkciseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daramad/': {
      id: '/daramad/'
      path: '/daramad'
      fullPath: '/daramad'
      preLoaderRoute: typeof DaramadIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DaramadIndexRoute: DaramadIndexRoute,
  ExworkciseIndexRoute: ExworkciseIndexRoute,
  FhoosedIndexRoute: FhoosedIndexRoute,
  SleeepIndexRoute: SleeepIndexRoute,
  TrackieIndexRoute: TrackieIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
